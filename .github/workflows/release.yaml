# Copied from: https://github.com/tauri-apps/tauri-action#creating-a-release-and-uploading-the-tauri-bundles
name: 'release'
on: workflow_dispatch

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04] # windows-latest, macos-latest, # Do not upgrade Ubuntu if wanted to work on older versions

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          #node-version:  latest
      - name: install Rust stable
        run:
          curl https://sh.rustup.rs -sSf | sh -s -- -y
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: | # libxdo-dev required by rdev fork # libxdo-dev
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf 
      - name: install frontend dependencies
        run: npm install # change this to npm or pnpm depending on which one you use
      - name: install macOS Apple Silicon dependencies
        if: matrix.platform == 'macos-latest'
        run: rustup target add aarch64-apple-darwin
      - uses: tauri-apps/tauri-action@dev
        if: matrix.platform == 'macos-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          args: --target universal-apple-darwin # One of following: --target aarch64-apple-darwin, --target universal-apple-darwin, --target x86_64-apple-darwin
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
      - uses: tauri-apps/tauri-action@dev
        if: matrix.platform != 'macos-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false